---
# Creates -and signs- certificate key-pairs for each subjkect in the tls_subjects dict.
- name: "Generate the {{ item.key }} private key"
  openssl_privatekey:
    path: "{{ certificates_path }}/{{ item.key }}_private.key"
    force: "{{ force_overwrite }}"
  register: "{{ item.key }}_private"
  loop: "{{ lookup('dict', tls_subjects)}}"
- name: "Generate a CSR for the {{ item.key }} private key"
  openssl_csr:
    path: "{{ certificates_path }}/{{ item.key }}_request.csr"
    privatekey_path: "{{ {{ item.key }}_private.filename }}"
    common_name: "{{ item.value.common_name }}"
    organization_name: "{{ item.value.organization_name }}"
    force: "{{force_overwrite}}"
  register: "{{ item.key }}_request"
  loop: "{{ lookup('dict', tls_subjects)}}"
- name: "Create the public key for the {{ item.key }} and sign with CA"
  community.crypto.x509_certificate:
    path: "{{ certificates_path }}/admin.crt"
    csr_path: "{{ {{ item.key }}_request.filename }}"
    ownca_path: "{{ ca_public.filename }}"
    ownca_privatekey_path: "{{ ca_private.filename }}"
    provider: ownca
    force: "{{force_overwrite}}"
  register: "{{ item.key }}_public"
  loop: "{{ lookup('dict', tls_subjects)}}"