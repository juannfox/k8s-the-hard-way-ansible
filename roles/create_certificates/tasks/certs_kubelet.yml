---
# Creates -and signs- certificate key-pairs for each Kubelet subject in the nodes_worker dict.
- name: "Generate the {{ item.key }} private key"
  openssl_privatekey:
    path: "{{ certificates_path }}/{{ item.key }}.key"
    force: "{{ force_overwrite }}"
  loop: "{{ lookup('ansible.builtin.dict', nodes_worker)}}"

- name: "Generate a CSR for the {{ item.key }} private key with SAN"
  openssl_csr:
    path: "{{ certificates_path }}/{{ item.key }}.csr"
    privatekey_path: "{{ certificates_path }}/{{ item.key }}.key"
    common_name: "system:node:{{ item.key }}"
    organization_name: system:nodes
    subject_alt_name:
      - "IP:{{ item.value.ip }}"
      - "DNS:{{ item.key }}"
      - "DNS:{{ item.value.fqdn }}"
    force: "{{ force_overwrite }}"
  loop: "{{ lookup('ansible.builtin.dict', nodes_worker)}}"
  
- name: "Create the public key for the {{ item.key }} and sign with CA"
  community.crypto.x509_certificate:
    path: "{{ certificates_path }}/{{ item.key }}.crt"
    csr_path: "{{ certificates_path }}/{{ item.key }}.csr"
    ownca_path: "{{ certificates_path }}/ca.crt"
    ownca_privatekey_path: "{{ certificates_path }}/ca.key"
    provider: ownca
    force: "{{ force_overwrite }}"
  loop: "{{ lookup('ansible.builtin.dict', nodes_worker)}}"