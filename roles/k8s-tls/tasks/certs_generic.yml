---
# Creates -and signs- certificates and generates kubeconfig for K8s componentes.
- name: Generate the private key for {{ tls_subject.name }}
  community.crypto.openssl_privatekey:
    path: "{{ certificates_path }}/{{ tls_subject.name }}.key"
    force: "{{ force_overwrite }}"

- name: Generate a CSR the private key for {{ tls_subject.name }}
  community.crypto.openssl_csr:
    path: "{{ certificates_path }}/{{ tls_subject.name }}.csr"
    privatekey_path: "{{ certificates_path }}/{{ tls_subject.name }}.key"
    common_name: "{{ tls_subject.common_name }}"
    organization_name: "{{ tls_subject.organization_name }}"
    force: "{{ force_overwrite }}"
  when: tls_subject_subject_alt_name is not defined

- name: Generate a CSR for the private key (with SAN) of {{ tls_subject.name }}
  community.crypto.openssl_csr:
    path: "{{ certificates_path }}/{{ tls_subject.name }}.csr"
    privatekey_path: "{{ certificates_path }}/{{ tls_subject.name }}.key"
    common_name: "{{ tls_subject.common_name }}"
    organization_name: "{{ tls_subject.organization_name }}"
    subject_alt_name:
      - "IP:{{ tls_subject.value.ip }}"
      - "DNS:{{ tls_subject.key }}"
      - "DNS:{{ tls_subject.value.fqdn }}"
    force: "{{ force_overwrite }}"
  when: tls_subject_subject_alt_name is defined

- name: Create and sign the public key for the {{ tls_subject.name }}
  community.crypto.x509_certificate:
    path: "{{ certificates_path }}/{{ tls_subject.name }}.crt"
    csr_path: "{{ certificates_path }}/{{ tls_subject.name }}.csr"
    ownca_path: "{{ ca_crt }}"
    ownca_privatekey_path: "{{ ca_key }}"
    provider: ownca
    force: "{{ force_overwrite }}"

- name: Register info on the public key for component {{ tls_subject.name }}
  community.crypto.x509_certificate_info:
    path: "{{ certificates_path }}/{{ tls_subject.name }}.crt"
  register: tls_subject_crt

- name: "Store the component key content encoded in base64 (no output)"
  ansible.builtin.set_fact:
    tls_subject_key_content:  "{{ lookup('ansible.builtin.file', certificates_path+'/'+tls_subject.name+'.key') | string | b64encode }}"

- name: "Store the component cert content encoded in base64"
  ansible.builtin.set_fact:
    tls_subject_crt_content:  "{{ tls_subject_crt.public_key | string | b64encode }}"

- name: Create the kubeconfig file for component
  ansible.builtin.template:
    src: roles/create_certificates/files/kubeconfig
    dest: "{{ kubeconfig_path }}/kubeconfig_{{ tls_subject.name }}"
    mode: " {{ kubeconfig_file_permissions }} "
